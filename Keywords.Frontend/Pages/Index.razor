@page "/"
@using Radzen.Blazor
@using Radzen
@using Keywords.Services.Interfaces

@inject ISwapVideoService _videoService
@inject NavigationManager Navigation

<PageTitle>Videos</PageTitle>

<RadzenDataList WrapItems="true" AllowPaging="false" Data="@videos" TItem="SwapVideos.API.Client.Generated.Video">
    <Template Context="video">
        <RadzenCard Style="width:300px; cursor: pointer;" @onclick="() => ViewVideoDetails(video.Id)">
            <RadzenStack Orientation="Orientation.Vertical">
                    <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-2 rz-my-0">Name</RadzenText>
                    <RadzenText TextStyle="TextStyle.Body1"><b>@(video?.Name)</b></RadzenText>
                    <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0">Description</RadzenText>
                    <RadzenText TextStyle="TextStyle.Body1"><b>@(video?.Description)</b></RadzenText>
            </RadzenStack>
        </RadzenCard>
    </Template>
</RadzenDataList>

<RadzenPager ShowPagingSummary="true" PagingSummaryFormat="@pagingSummaryFormat" HorizontalAlign="HorizontalAlign.Right" Count="count" PageSize="@pageSize" PageNumbersCount="5" PageChanged="@PageChanged" />

@code {
    string pagingSummaryFormat = "Displaying page {0} of {1} (total {2} records)";
    int pageSize = 2;
    int count;
    IEnumerable<SwapVideos.API.Client.Generated.Video> videos;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        
        videos = await GetAllVideosAsync(0, pageSize);
        count = videos.Count();
    }

    private async void PageChanged(PagerEventArgs args)
    {
        videos = await GetAllVideosAsync(args.Skip, args.Top);
    }

    private void ViewVideoDetails(Guid? videoId)
    {
        Navigation.NavigateTo($"/video/{videoId}");
    }

    private async Task<IList<SwapVideos.API.Client.Generated.Video>> GetAllVideosAsync(int? page, int size)
    {
        //return await _videoService.GetAllVideosAsync(page, size);
        Guid videoId = new Guid("212ced62-0fda-4d02-b4e9-6d9b76122778");
        var _videos = new List<SwapVideos.API.Client.Generated.Video>
        {
            new SwapVideos.API.Client.Generated.Video()
            {
                Description = "Amazing video you wanna watch!",
                Id = videoId,
                IsIndexed = false,
                Name = "Lesson 1",
                VideoLink = "je0132jeh9013j"
            },
            new SwapVideos.API.Client.Generated.Video()
            {
                Description = "Crazy video! I can't believe it!",
                Id = videoId,
                IsIndexed = false,
                Name = "Lesson 2",
                VideoLink = "nfiowefenflwef"
            }
            ,
            new SwapVideos.API.Client.Generated.Video()
            {
                Description = "OH my GOD! You have to watch this NOW!",
                Id = videoId,
                IsIndexed = false,
                Name = "Lesson 3",
                VideoLink = "tjukiykukjyukj"
            },
            new SwapVideos.API.Client.Generated.Video()
            {
                Description = "Yes! This is what you've been waiting for!",
                Id = videoId,
                IsIndexed = false,
                Name = "Lesson 4",
                VideoLink = "mgprmegpfomfewf"
            }
        };
        return _videos;
    }
}